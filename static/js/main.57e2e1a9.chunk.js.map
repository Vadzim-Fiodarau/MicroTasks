{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/HW6.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","e","message","img_wrap","src","avatar","img","text_wrap","style","color","name","time","display","messageData","HW1","Error404","Affair","s","affair","priority","button","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","wrapAffair","buttonFilter","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","wrap","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","setError","inputClass","input","disable","value","onChange","onKeyPress","disabled","totalUser","errorColor","GreetingContainer","users","addUserCallback","userID","setName","length","currentTarget","trim","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","text","setText","showAlert","checked","setChecked","column","blue","PreJunior","Junior","JuniorPlus","PATH","Routes1","path","element","Header","header","to","isActive","active","link","block","HW5","Routes","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","MouseEvent","HW6","setValue","undefined","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.57e2e1a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Affairs_wrap__2oZcW\",\"affair\":\"Affairs_affair__2xNa7\",\"wrapAffair\":\"Affairs_wrapAffair__2vwqx\",\"button\":\"Affairs_button__2B3oD\",\"buttonFilter\":\"Affairs_buttonFilter__2qFFg\",\"priority\":\"Affairs_priority__2NOt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__3tbzb\",\"active\":\"Header_active__2NOw4\",\"block\":\"Header_block__3aeNB\",\"header\":\"Header_header__2SzaI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Greeting_input__3Mu0y\",\"error\":\"Greeting_error__wG1oO\",\"errorColor\":\"Greeting_errorColor__2uZ-O\",\"wrap\":\"Greeting_wrap__3FKfi\",\"totalUser\":\"Greeting_totalUser__3Cd0-\",\"button\":\"Greeting_button__2F2Z9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1WA8K\",\"img\":\"Message_img__1PtGI\",\"text_wrap\":\"Message_text_wrap__33Y5T\",\"time\":\"Message_time__3tOFw\",\"angel\":\"Message_angel__CHsVG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__22eZ1\",\"errorInput\":\"SuperInputText_errorInput__3cD5s\",\"error\":\"SuperInputText_error__2Vafg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3UA2H\",\"red\":\"SuperButton_red__2FL3d\",\"button\":\"SuperButton_button__3Iugx\",\"blink\":\"SuperButton_blink__yi5cH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1yjAP\",\"column\":\"HW4_column__3K7xV\",\"testSpanError\":\"HW4_testSpanError__23oPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3M2Ie\",\"spanClassName\":\"SuperCheckbox_spanClassName__6dwgk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__ufD0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__271MM\"};","import React from 'react'\nimport e from './Message.module.css'\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n      <div className={e.message}>\n          <div className={e.img_wrap}>\n              <img src={props.avatar} className={e.img}/>\n          </div>\n\n\n          <div className={e.text_wrap}>\n              <div style={{color:'blue'}}>{props.name}</div>\n              <div style={{color:'olive'}}>{props.message}</div>\n              <div style={{color:'white'}}className={e.time}>\n                  <div style={{display:\"flex\"}}>\n                      {props.time}\n                  </div>\n              </div>\n          </div>\n      </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n  avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n  name: 'Vadim',\n  message: 'You should learn more',\n  time: '22:00',\n}\n\nfunction HW1() {\n  return (\n    <div>\n      <Message\n        avatar={messageData.avatar}\n        name={messageData.name}\n        message={messageData.message}\n        time={messageData.time}\n      />\n    </div>\n  )\n}\n\nexport default HW1\n","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\ntype AffairPropsType = {\n  affair: AffairType\n  deleteAffairCallback: (_id: number) => void\n\n}\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id)\n  }\n\n  return (\n    <div className={s.affair}>\n      <div> {props.affair.name}</div>\n      <div className={s.priority}>  [{props.affair.priority}]</div>\n      <button className={s.button}  onClick={deleteCallback}>X</button>\n    </div>\n  )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from \"./Affairs.module.css\";\n\ntype AffairsPropsType = {\n  data: AffairType[]\n  setFilter: (filter: FilterType) => void\n  deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n  const mappedAffairs = props.data.map((a: AffairType) => {\n    const deleteAffairCallback = () => {\n      props.deleteAffairCallback(a._id)\n    }\n    return (\n      <Affair\n        key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n        affair={a}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n\n    )\n  })\n\n  const setAll = () => {\n    props.setFilter('all')\n  }\n  const setHigh = () => {\n    props.setFilter('high')\n  }\n  const setMiddle = () => {\n    props.setFilter('low')\n  }\n  const setLow = () => {\n    props.setFilter('middle')\n  }\n\n  return (\n    <div className={s.wrapAffair}>\n\n      {mappedAffairs}\n\n        <button className={s.buttonFilter} onClick={setAll}>All</button>\n        <button className={s.buttonFilter} onClick={setHigh}>High</button>\n        <button className={s.buttonFilter} onClick={setMiddle}>Middle</button>\n        <button className={s.buttonFilter} onClick={setLow}>Low</button>\n\n    </div>\n  )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport s from './Affairs.module.css'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\nexport type AffairType = {\n  _id: number\n  name: string\n  priority: string\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [\n  {_id: 1, name: 'React', priority: 'high'},\n  {_id: 2, name: 'Anime', priority: 'low'},\n  {_id: 3, name: 'Games', priority: 'low'},\n  {_id: 4, name: 'Work', priority: 'high'},\n  {_id: 5, name: 'HTML & CSS', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\n  if (filter === 'all') return affairs\n  if (filter === 'high') return affairs.filter(t=>t.priority === 'high')\n  if (filter === 'low') return affairs.filter(t=>t.priority === 'low')\n  if (filter === 'middle') return affairs.filter(t=>t.priority === 'middle')\n  else return []\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\n  return affairs.filter(t=>t._id !== _id)\n}\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\n  const [filter, setFilter] = useState<FilterType>('all')\n\n  const filteredAffairs = filterAffairs(affairs, filter)\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n  return (\n    <div className={s.wrap}>\n      <hr/>\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n      <hr/>\n    </div>\n  )\n}\n\nexport default HW2\n\n","import React, {KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n  name: string\n  setNameCallback: (e: any) => void\n  addUser: () => void\n  error: string\n  totalUsers: number\n  setError: (error: string) => void\n  onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n  {\n    name,\n    setNameCallback,\n    addUser,\n    error,\n    totalUsers,\n    setError,\n    onKeyPressHandler\n  }\n) => {\n\n  const inputClass = error ? s.error : s.input\n  const disable = !!error\n\n  return (\n    <div >\n      <input value={name} onChange={setNameCallback}\n             onKeyPress={onKeyPressHandler}\n             className={inputClass}/>\n      <button onClick={addUser} disabled={disable} className={s.button}>add</button>\n      <span className={s.totalUser}>{totalUsers}</span>\n      <div className={s.errorColor}>{error}</div>\n    </div>\n  )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\nimport {KeyboardEvent} from 'react'\n\n\ntype GreetingContainerPropsType = {\n    users: UserType[]\n    addUserCallback: (name: string, _id:string) => void\n    userID: string\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback, userID}) => {\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n\n    const setNameCallback = (e:KeyboardEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n        setError('')\n    }\n\n    const onKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>) => {\n        if(e.key === 'Enter'){\n            addUserCallback(name, userID)\n            alert(`Hello ${name} !`)\n            setName('')\n        }\n    }\n\n    const addUser = () => {\n        if(name.trim() !== ''){\n            addUserCallback(name, userID)\n            alert(`Hello ${name} !`)\n            setName('')\n        } else {\n            setError(\"Title is required\");\n\n        }\n\n    }\n\n    const totalUsers = users.length\n\n    return (\n      <Greeting\n        name={name}\n        setNameCallback={setNameCallback}\n        addUser={addUser}\n        error={error}\n        totalUsers={totalUsers}\n        setError={setError}\n        onKeyPressHandler={onKeyPressHandler}\n      />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid';\nimport s from \"./Greeting.module.css\";\n\n// types\nexport type UserType = {\n  _id: string\n  name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n  const [users, setUsers] = useState<UserType[]>([])\n  const userID = v1()\n  const addUserCallback = (name: string, _id: string) => {\n    setUsers([...users, {name, _id}])\n  }\n\n  return (\n    <div className={s.wrap}>\n      <hr/>\n      {/*should work (должно работать)*/}\n      <GreetingContainer users={users} addUserCallback={addUserCallback} userID={userID}/>\n      <hr/>\n    </div>\n  )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput: s.superInput} ${className}}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\n\nfunction Junior() {\n    return (\n        <div>\n          Junior\n\n        </div>\n    )\n}\n\nexport default Junior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n\n          JuniorPlus\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from './pages/PreJunior';\n\nimport {Routes} from 'react-router-dom'\n\nimport {\n  Route\n\n} from \"react-router-dom\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n  PRE_JUNIOR: '/pre-junior',\n  JUNIOR: '/junior',\n  JUNIOR_PLUS: '/junior-plus',\n}\n\nfunction Routes1() {\n\n  return (\n    <div>\n      {/*Switch выбирает первый подходящий роут*/}\n      <Routes>\n\n        {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n        {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n        <Route path={'/'} element={PATH.PRE_JUNIOR}/>\n        <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\n        <Route path={PATH.JUNIOR} element={<Junior/>}/>\n        <Route path={PATH.JUNIOR_PLUS} element={ <JuniorPlus/>}/>\n\n\n        {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n\n        <Route path={'*'} element={<Error404/>}/>\n\n      </Routes>\n    </div>\n  )\n}\n\nexport default Routes1\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {PATH} from \"./Routes\";\nimport s from './Header.module.css'\n\nfunction Header() {\n\n\n  return (\n    <div className={s.header}>\n      <NavLink to={PATH.PRE_JUNIOR}  className={({isActive}) => isActive ? s.active :  s.link}  >Pre Junior</NavLink>\n      <NavLink to={PATH.JUNIOR} className={({isActive}) => isActive ? s.active :  s.link}>Junior</NavLink>\n      <NavLink to={PATH.JUNIOR_PLUS} className={({isActive}) => isActive ? s.active :  s.link}>Junior Plus</NavLink>\n      <div className={s.block}/>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\n\nimport {HashRouter} from \"react-router-dom\";\nimport Routes1 from \"./Routes\";\n\n\nfunction HW5() {\n  return (\n    <div>\n      {/*в gh-pages лучше работает HashRouter*/}\n      <HashRouter>\n\n        <Header/>\n\n        <Routes1/>\n\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default HW5\n","import React, {\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  HTMLAttributes,\n  useState\n} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './SuperEditableSpan.module.css'\n\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void\n  onEnter?: () => void\n  error?: string\n  spanClassName?: string\n\n  spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n  {\n    autoFocus, // игнорировать изменение этого пропса\n    onBlur,\n    onEnter,\n    spanProps,\n\n    ...restProps// все остальные пропсы попадут в объект restProps\n  }\n) => {\n  const [editMode, setEditMode] = useState<boolean>(false)\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n  const onEnterCallback = () => {\n    setEditMode(false)\n\n    onEnter && onEnter()\n  }\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (e.currentTarget.value) {\n      setEditMode(false)\n    }\n\n\n    onBlur && onBlur(e)\n  }\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n    if (MouseEvent) {\n      setEditMode(true)\n    }\n\n    onDoubleClick && onDoubleClick(e)\n  }\n\n  const spanClassName = `${s.span} ${className ? className: ''}`\n\n  return (\n    <>\n      {editMode\n        ? (\n          <SuperInputText\n            autoFocus // пропсу с булевым значением не обязательно указывать true\n            onBlur={onBlurCallback}\n            onEnter={onEnterCallback}\n\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n          />\n        ) : (\n          <span\n            onDoubleClick={onDoubleClickCallBack}\n            className={spanClassName}\n\n            {...restSpanProps}\n          >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n            ✎ {children || restProps.value}\n                    </span>\n        )\n      }\n    </>\n  )\n}\n\nexport default SuperEditableSpan\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value',value )\n    }\n    const restore = () => {\n        return setValue(restoreState('editable-span-value', ''))\n    }\n\n    return (\n        <div>\n            <hr/>\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}/>\n            </div>\n\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n        </div>\n    )\n}\n\nexport default HW6\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\n// export type StateType = {\n//     x: string\n//     y: number\n// }\n\n// // сохраняем объект типа StateType в ячейке 'test'\n// saveState<StateType>('test', {x: 'A', y: 1})\n//\n// // получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\n// const state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\nimport HW6 from '../../../p2-homeworks/h6/HW6';\n\nfunction App() {\n  return (\n    <div className={s.App}>\n      <div>react homeworks:</div>\n      <HW1/>\n      <HW2/>\n      <HW3/>\n      <HW4/>\n      <HW5/>\n      <HW6/>\n\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}